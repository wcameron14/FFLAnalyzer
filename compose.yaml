version: '3.8'
services:
  postgres:
    container_name: postgres
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PW}
    ports:
      - "5432:5432"
    volumes:
    - fflanalyzerSQL:/var/lib/postgresql/data

    networks:
      - ffla_network

  gamedata_postgres:
    image: postgres:latest
    container_name: gamedata_postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: gamedata
      POSTGRES_PASSWORD: ${GAMEDATA_PW}
    ports:
      - "5433:5432" # Expose port 5433 on the host and map it to 5432 in the container
    volumes:
      - game_data:/var/lib/postgresql/data
    networks:
      - ffla_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_MAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PW}
    ports:
      - "8080:80"
    networks:
      - ffla_network

  app:
    container_name: app
    build: .
    env_file:
      - .env
    ports:
      - "5000:5000"  # Map Flask's default port to host's port
    depends_on:
      - postgres
    networks:
      - ffla_network
    command: ["flask", "run", "--host=0.0.0.0"]  # Start the Flask app
    environment:
      FLASK_ENV: development


volumes:
  game_data: # Create a volume to persist the database data
  fflanalyzerSQL: # Create a volume to persist the database data
  
networks:
  ffla_network:
